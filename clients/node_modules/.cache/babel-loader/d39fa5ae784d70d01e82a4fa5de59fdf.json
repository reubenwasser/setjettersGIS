{"ast":null,"code":"import _slicedToArray from \"/home/rwasser/setjetters/setjettersGIS/clients/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/rwasser/setjetters/setjettersGIS/clients/src/components/Map/Layers/Layers.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TileLayer, LayersControl, LayerGroup, FeatureGroup, useMap, useMapEvent } from 'react-leaflet';\nimport MovieSets from './MovieSets';\nimport Cities from './Cities';\nimport Businesses from './Businesses';\nimport OSMForm from '../OSM/OSMForm';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layers() {\n  _s();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      OSMSearch = _React$useState2[0],\n      setOSMSearch = _React$useState2[1];\n\n  var _React$useState3 = React.useState(useMap().getBounds()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      mapBounds = _React$useState4[0],\n      setMapBounds = _React$useState4[1];\n\n  var map = useMapEvent('move', function () {\n    setMapBounds(map.getBounds());\n  });\n\n  var onSearchChange = function onSearchChange(key, value) {\n    setOSMSearch([key, value]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LayersControl, {\n    position: \"topright\",\n    collapsed: \"False\",\n    children: [/*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n      checked: true,\n      name: \"OpenStreetMap\",\n      children: /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n      name: \"Black and White\",\n      children: /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n      name: \"Movie Sets\",\n      children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n        children: /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n          children: /*#__PURE__*/_jsxDEV(MovieSets, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n      name: \"Cities\",\n      children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n        children: /*#__PURE__*/_jsxDEV(Cities, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n      pathOptions: {\n        color: 'purple'\n      },\n      children: [/*#__PURE__*/_jsxDEV(OSMForm, {\n        handleSearchChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        children: /*#__PURE__*/_jsxDEV(Businesses, {\n          searchParams: attractionSearch,\n          mapBounds: mapBounds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layers, \"a8yJPgyI+qBxYWLoWnPUHvs77bU=\", false, function () {\n  return [useMap, useMapEvent];\n});\n\n_c = Layers;\nexport default Layers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layers\");","map":{"version":3,"sources":["/home/rwasser/setjetters/setjettersGIS/clients/src/components/Map/Layers/Layers.js"],"names":["React","TileLayer","LayersControl","LayerGroup","FeatureGroup","useMap","useMapEvent","MovieSets","Cities","Businesses","OSMForm","MarkerClusterGroup","Layers","useState","OSMSearch","setOSMSearch","getBounds","mapBounds","setMapBounds","map","onSearchChange","key","value","color","attractionSearch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,UAAnC,EAA+CC,YAA/C,EAA6DC,MAA7D,EAAqEC,WAArE,QAAuF,eAAvF;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;;;AAIA,SAASC,MAAT,GAAkB;AAAA;;AAEd,wBAAkCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,yBAAkCf,KAAK,CAACa,QAAN,CAAeR,MAAM,GAAGW,SAAT,EAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,GAAG,GAAGb,WAAW,CAAC,MAAD,EAAS,YAAM;AACpCY,IAAAA,YAAY,CAACC,GAAG,CAACH,SAAJ,EAAD,CAAZ;AACD,GAFsB,CAAvB;;AAIA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,KAAN,EAAgB;AACrCP,IAAAA,YAAY,CAAC,CAACM,GAAD,EAAMC,KAAN,CAAD,CAAZ;AACD,GAFD;;AAIF,sBACE,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,UAAxB;AAAmC,IAAA,SAAS,EAAC,OAA7C;AAAA,4BACI,QAAC,aAAD,CAAe,SAAf;AAAyB,MAAA,OAAO,MAAhC;AAAiC,MAAA,IAAI,EAAC,eAAtC;AAAA,6BACI,QAAC,SAAD;AACI,QAAA,WAAW,EAAC,0EADhB;AAEI,QAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,aAAD,CAAe,SAAf;AAAyB,MAAA,IAAI,EAAC,iBAA9B;AAAA,6BACI,QAAC,SAAD;AACI,QAAA,WAAW,EAAC,0EADhB;AAEI,QAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI,QAAC,aAAD,CAAe,OAAf;AAAuB,MAAA,IAAI,EAAC,YAA5B;AAAA,6BACI,QAAC,UAAD;AAAA,+BACI,QAAC,kBAAD;AAAA,iCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ,eAoBI,QAAC,aAAD,CAAe,OAAf;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAA,6BACI,QAAC,UAAD;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBJ,eAyBI,QAAC,YAAD;AAAc,MAAA,WAAW,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA3B;AAAA,8BACQ,QAAC,OAAD;AAAS,QAAA,kBAAkB,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,QAAC,kBAAD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,YAAY,EAAEI,gBAA1B;AAA4C,UAAA,SAAS,EAAEP;AAAvD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GA/CQL,M;UAG4CP,M,EAErCC,W;;;KALPM,M;AAiDT,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { TileLayer, LayersControl, LayerGroup, FeatureGroup, useMap, useMapEvent} from 'react-leaflet';\nimport MovieSets from './MovieSets';\nimport Cities from './Cities';\nimport Businesses from './Businesses'\nimport OSMForm from '../OSM/OSMForm';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\n\n\n\nfunction Layers() {\n\n    const [OSMSearch, setOSMSearch] = React.useState([]);\n    const [mapBounds, setMapBounds] = React.useState(useMap().getBounds());\n\n    const map = useMapEvent('move', () => {\n      setMapBounds(map.getBounds());\n    });\n\n    const onSearchChange = (key, value) => {\n      setOSMSearch([key, value]);\n    }\n\n  return (\n    <LayersControl position=\"topright\" collapsed=\"False\">\n        <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"Black and White\">\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n            />\n        </LayersControl.BaseLayer>\n        <LayersControl.Overlay name=\"Movie Sets\">\n            <LayerGroup>\n                <MarkerClusterGroup>\n                    <MovieSets />\n                </MarkerClusterGroup>\n            </LayerGroup>\n        </LayersControl.Overlay>\n        <LayersControl.Overlay name=\"Cities\">\n            <LayerGroup>\n                <Cities />\n            </LayerGroup>\n        </LayersControl.Overlay>\n        <FeatureGroup pathOptions={{ color: 'purple' }}>\n                <OSMForm handleSearchChange={onSearchChange}/>\n                <MarkerClusterGroup>\n                    <Businesses searchParams={attractionSearch} mapBounds={mapBounds}/>\n                </MarkerClusterGroup>\n            </FeatureGroup>\n    </LayersControl>\n  );\n}\n\nexport default Layers;\n"]},"metadata":{},"sourceType":"module"}