{"ast":null,"code":"/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash exports=\"node\" include=\"clone,merge,isEmpty,isArray,compact,each\" -d`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;\n(function () {\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [];\n  /** Used internally to indicate various things */\n\n  var indicatorObject = {};\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n\n  var maxPoolSize = 40;\n  /** Used to match regexp flags from their coerced string values */\n\n  var reFlags = /\\w*$/;\n  /** Used to detected named functions */\n\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n  /** Used to detect functions containing a `this` reference */\n\n  var reThis = /\\bthis\\b/;\n  /** Used to fix the JScript [[DontEnum]] bug */\n\n  var shadowedProps = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];\n  /** `Object#toString` result shortcuts */\n\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      errorClass = '[object Error]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n  /** Used to identify object classifications that `_.clone` supports */\n\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] = cloneableClasses[boolClass] = cloneableClasses[dateClass] = cloneableClasses[numberClass] = cloneableClasses[objectClass] = cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n  /** Used as the property descriptor for `__bindData__` */\n\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n  /** Used as the data object for `iteratorTemplate` */\n\n  var iteratorData = {\n    'args': '',\n    'array': null,\n    'bottom': '',\n    'firstArg': '',\n    'init': '',\n    'keys': null,\n    'loop': '',\n    'shadowedProps': null,\n    'support': null,\n    'top': '',\n    'useHas': false\n  };\n  /** Used to determine if values are of the language type Object */\n\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n  /** Used as a reference to the global object */\n\n  var root = objectTypes[typeof window] && window || this;\n  /** Detect free variable `exports` */\n\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n  /** Detect free variable `module` */\n\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n  /** Detect the popular CommonJS extension `module.exports` */\n\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n\n  var freeGlobal = objectTypes[typeof global] && global;\n\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n\n\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n  /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */\n\n\n  function isNode(value) {\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  }\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n\n\n  function releaseArray(array) {\n    array.length = 0;\n\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n\n\n  function slice(array, start, end) {\n    start || (start = 0);\n\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n\n    return result;\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n\n\n  var arrayRef = [];\n  /** Used for native method references */\n\n  var errorProto = Error.prototype,\n      objectProto = Object.prototype,\n      stringProto = String.prototype;\n  /** Used to resolve the internal [[Class]] of values */\n\n  var toString = objectProto.toString;\n  /** Used to detect if a method is native */\n\n  var reNative = RegExp('^' + String(toString).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/toString| for [^\\]]+/g, '.*?') + '$');\n  /** Native method shortcuts */\n\n  var fnToString = Function.prototype.toString,\n      getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n      hasOwnProperty = objectProto.hasOwnProperty,\n      push = arrayRef.push,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable,\n      unshift = arrayRef.unshift;\n  /** Used to set meta data on functions */\n\n  var defineProperty = function () {\n    // IE 8 only accepts DOM elements\n    try {\n      var o = {},\n          func = isNative(func = Object.defineProperty) && func,\n          result = func(o, o, o) && func;\n    } catch (e) {}\n\n    return result;\n  }();\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n\n\n  var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n      nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n  /** Used to lookup a built-in constructor by [[Class]] */\n\n  var ctorByClass = {};\n  ctorByClass[arrayClass] = Array;\n  ctorByClass[boolClass] = Boolean;\n  ctorByClass[dateClass] = Date;\n  ctorByClass[funcClass] = Function;\n  ctorByClass[objectClass] = Object;\n  ctorByClass[numberClass] = Number;\n  ctorByClass[regexpClass] = RegExp;\n  ctorByClass[stringClass] = String;\n  /** Used to avoid iterating non-enumerable properties in IE < 9 */\n\n  var nonEnumProps = {};\n  nonEnumProps[arrayClass] = nonEnumProps[dateClass] = nonEnumProps[numberClass] = {\n    'constructor': true,\n    'toLocaleString': true,\n    'toString': true,\n    'valueOf': true\n  };\n  nonEnumProps[boolClass] = nonEnumProps[stringClass] = {\n    'constructor': true,\n    'toString': true,\n    'valueOf': true\n  };\n  nonEnumProps[errorClass] = nonEnumProps[funcClass] = nonEnumProps[regexpClass] = {\n    'constructor': true,\n    'toString': true\n  };\n  nonEnumProps[objectClass] = {\n    'constructor': true\n  };\n\n  (function () {\n    var length = shadowedProps.length;\n\n    while (length--) {\n      var key = shadowedProps[length];\n\n      for (var className in nonEnumProps) {\n        if (hasOwnProperty.call(nonEnumProps, className) && !hasOwnProperty.call(nonEnumProps[className], key)) {\n          nonEnumProps[className][key] = false;\n        }\n      }\n    }\n  })();\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps the given value to enable intuitive\n   * method chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * Chaining is supported in custom builds as long as the `value` method is\n   * implicitly or explicitly included in the build.\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n   * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n   * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n   * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n   * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n   * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n   * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n   * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n   * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n   * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n   * and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n   * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n   * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n   * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n   * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n   * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n   * `template`, `unescape`, `uniqueId`, and `value`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * provided, otherwise they return unwrapped values.\n   *\n   * Explicit chaining can be enabled by using the `_.chain` method.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   * @example\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // returns an unwrapped value\n   * wrapped.reduce(function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * // returns a wrapped value\n   * var squares = wrapped.map(function(num) {\n   *   return num * num;\n   * });\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n\n\n  function lodash() {// no operation performed\n  }\n  /**\n   * An object used to flag environments features.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n\n\n  var support = lodash.support = {};\n\n  (function () {\n    var ctor = function ctor() {\n      this.x = 1;\n    },\n        object = {\n      '0': 1,\n      'length': 1\n    },\n        props = [];\n\n    ctor.prototype = {\n      'valueOf': 1,\n      'y': 1\n    };\n\n    for (var key in new ctor()) {\n      props.push(key);\n    }\n\n    for (key in arguments) {}\n    /**\n     * Detect if an `arguments` object's [[Class]] is resolvable (all but Firefox < 4, IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n\n    support.argsClass = toString.call(arguments) == argsClass;\n    /**\n     * Detect if `arguments` objects are `Object` objects (all but Narwhal and Opera < 10.5).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.argsObject = arguments.constructor == Object && !(arguments instanceof Array);\n    /**\n     * Detect if `name` or `message` properties of `Error.prototype` are\n     * enumerable by default. (IE < 9, Safari < 5.1)\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') || propertyIsEnumerable.call(errorProto, 'name');\n    /**\n     * Detect if `prototype` properties are enumerable by default.\n     *\n     * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n     * (if the prototype or a property on the prototype has been set)\n     * incorrectly sets a function's `prototype` property [[Enumerable]]\n     * value to `true`.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.enumPrototypes = propertyIsEnumerable.call(ctor, 'prototype');\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.funcDecomp = !isNative(root.WinRTError) && reThis.test(function () {\n      return this;\n    });\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.funcNames = typeof Function.name == 'string';\n    /**\n     * Detect if `arguments` object indexes are non-enumerable\n     * (Firefox < 4, IE < 9, PhantomJS, Safari < 5.1).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.nonEnumArgs = key != 0;\n    /**\n     * Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n     *\n     * In IE < 9 an objects own properties, shadowing non-enumerable ones, are\n     * made non-enumerable as well (a.k.a the JScript [[DontEnum]] bug).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.nonEnumShadows = !/valueOf/.test(props);\n    /**\n     * Detect if own properties are iterated after inherited properties (all but IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.ownLast = props[0] != 'x';\n    /**\n     * Detect if `Array#shift` and `Array#splice` augment array-like objects correctly.\n     *\n     * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n     * and `splice()` functions that fail to remove the last element, `value[0]`,\n     * of array-like objects even though the `length` property is set to `0`.\n     * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n     * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.spliceObjects = (arrayRef.splice.call(object, 0, 1), !object[0]);\n    /**\n     * Detect lack of support for accessing string characters by index.\n     *\n     * IE < 8 can't access characters by index and IE 8 can only access\n     * characters by index on string literals.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    support.unindexedChars = 'x'[0] + Object('x')[0] != 'xx';\n    /**\n     * Detect if a DOM node's [[Class]] is resolvable (all but IE < 9)\n     * and that the JS engine errors when attempting to coerce an object to\n     * a string without a `toString` function.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n\n    try {\n      support.nodeClass = !(toString.call(document) == objectClass && !({\n        'toString': 0\n      } + ''));\n    } catch (e) {\n      support.nodeClass = true;\n    }\n  })(1);\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Object} data The data object used to populate the text.\n   * @returns {string} Returns the interpolated text.\n   */\n\n\n  var iteratorTemplate = function iteratorTemplate(obj) {\n    var __p = 'var index, iterable = ' + obj.firstArg + ', result = ' + obj.init + ';\\nif (!iterable) return result;\\n' + obj.top + ';';\n\n    if (obj.array) {\n      __p += '\\nvar length = iterable.length; index = -1;\\nif (' + obj.array + ') {  ';\n\n      if (support.unindexedChars) {\n        __p += '\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  ';\n      }\n\n      __p += '\\n  while (++index < length) {\\n    ' + obj.loop + ';\\n  }\\n}\\nelse {  ';\n    } else if (support.nonEnumArgs) {\n      __p += '\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      ' + obj.loop + ';\\n    }\\n  } else {  ';\n    }\n\n    if (support.enumPrototypes) {\n      __p += '\\n  var skipProto = typeof iterable == \\'function\\';\\n  ';\n    }\n\n    if (support.enumErrorProps) {\n      __p += '\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  ';\n    }\n\n    var conditions = [];\n\n    if (support.enumPrototypes) {\n      conditions.push('!(skipProto && index == \"prototype\")');\n    }\n\n    if (support.enumErrorProps) {\n      conditions.push('!(skipErrorProps && (index == \"message\" || index == \"name\"))');\n    }\n\n    if (obj.useHas && obj.keys) {\n      __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n';\n\n      if (conditions.length) {\n        __p += '    if (' + conditions.join(' && ') + ') {\\n  ';\n      }\n\n      __p += obj.loop + ';    ';\n\n      if (conditions.length) {\n        __p += '\\n    }';\n      }\n\n      __p += '\\n  }  ';\n    } else {\n      __p += '\\n  for (index in iterable) {\\n';\n\n      if (obj.useHas) {\n        conditions.push(\"hasOwnProperty.call(iterable, index)\");\n      }\n\n      if (conditions.length) {\n        __p += '    if (' + conditions.join(' && ') + ') {\\n  ';\n      }\n\n      __p += obj.loop + ';    ';\n\n      if (conditions.length) {\n        __p += '\\n    }';\n      }\n\n      __p += '\\n  }    ';\n\n      if (support.nonEnumShadows) {\n        __p += '\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      ';\n\n        for (k = 0; k < 7; k++) {\n          __p += '\\n    index = \\'' + obj.shadowedProps[k] + '\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';\n\n          if (!obj.useHas) {\n            __p += ' || (!nonEnum[index] && iterable[index] !== objectProto[index])';\n          }\n\n          __p += ') {\\n      ' + obj.loop + ';\\n    }      ';\n        }\n\n        __p += '\\n  }    ';\n      }\n    }\n\n    if (obj.array || support.nonEnumArgs) {\n      __p += '\\n}';\n    }\n\n    __p += obj.bottom + ';\\nreturn result';\n    return __p;\n  };\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.bind` that creates the bound function and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new bound function.\n   */\n\n\n  function baseBind(bindData) {\n    var func = bindData[0],\n        partialArgs = bindData[2],\n        thisArg = bindData[4];\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.io/#x15.3.4.5\n      if (partialArgs) {\n        // avoid `arguments` object deoptimizations by using `slice` instead\n        // of `Array.prototype.slice.call` and not assigning `arguments` to a\n        // variable as a ternary expression\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      } // mimic the constructor's `return` behavior\n      // http://es5.github.io/#x13.2.2\n\n\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `func`\n        var thisBinding = baseCreate(func.prototype),\n            result = func.apply(thisBinding, args || arguments);\n        return isObject(result) ? result : thisBinding;\n      }\n\n      return func.apply(thisArg, args || arguments);\n    }\n\n    setBindData(bound, bindData);\n    return bound;\n  }\n  /**\n   * The base implementation of `_.clone` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates clones with source counterparts.\n   * @returns {*} Returns the cloned value.\n   */\n\n\n  function baseClone(value, isDeep, callback, stackA, stackB) {\n    if (callback) {\n      var result = callback(value);\n\n      if (typeof result != 'undefined') {\n        return result;\n      }\n    } // inspect [[Class]]\n\n\n    var isObj = isObject(value);\n\n    if (isObj) {\n      var className = toString.call(value);\n\n      if (!cloneableClasses[className] || !support.nodeClass && isNode(value)) {\n        return value;\n      }\n\n      var ctor = ctorByClass[className];\n\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          return new ctor(+value);\n\n        case numberClass:\n        case stringClass:\n          return new ctor(value);\n\n        case regexpClass:\n          result = ctor(value.source, reFlags.exec(value));\n          result.lastIndex = value.lastIndex;\n          return result;\n      }\n    } else {\n      return value;\n    }\n\n    var isArr = isArray(value);\n\n    if (isDeep) {\n      // check for circular references and return corresponding clone\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n      var length = stackA.length;\n\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n\n      result = isArr ? ctor(value.length) : {};\n    } else {\n      result = isArr ? slice(value) : assign({}, value);\n    } // add array properties assigned by `RegExp#exec`\n\n\n    if (isArr) {\n      if (hasOwnProperty.call(value, 'index')) {\n        result.index = value.index;\n      }\n\n      if (hasOwnProperty.call(value, 'input')) {\n        result.input = value.input;\n      }\n    } // exit for shallow clone\n\n\n    if (!isDeep) {\n      return result;\n    } // add the source value to the stack of traversed objects\n    // and associate it with its clone\n\n\n    stackA.push(value);\n    stackB.push(result); // recursively populate clone (susceptible to call stack limits)\n\n    (isArr ? baseEach : forOwn)(value, function (objValue, key) {\n      result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n    });\n\n    if (initedStack) {\n      releaseArray(stackA);\n      releaseArray(stackB);\n    }\n\n    return result;\n  }\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n\n\n  function baseCreate(prototype, properties) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n  } // fallback for browsers without `Object.create`\n\n\n  if (!nativeCreate) {\n    baseCreate = function () {\n      function Object() {}\n\n      return function (prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object();\n          Object.prototype = null;\n        }\n\n        return result || root.Object();\n      };\n    }();\n  }\n  /**\n   * The base implementation of `_.createCallback` without support for creating\n   * \"_.pluck\" or \"_.where\" style callbacks.\n   *\n   * @private\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n\n\n  function baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    } // exit early for no `thisArg` or already bound by `Function#bind`\n\n\n    if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n      return func;\n    }\n\n    var bindData = func.__bindData__;\n\n    if (typeof bindData == 'undefined') {\n      if (support.funcNames) {\n        bindData = !func.name;\n      }\n\n      bindData = bindData || !support.funcDecomp;\n\n      if (!bindData) {\n        var source = fnToString.call(func);\n\n        if (!support.funcNames) {\n          bindData = !reFuncName.test(source);\n        }\n\n        if (!bindData) {\n          // checks if `func` references the `this` keyword and stores the result\n          bindData = reThis.test(source);\n          setBindData(func, bindData);\n        }\n      }\n    } // exit early if there are no `this` references or `func` is bound\n\n\n    if (bindData === false || bindData !== true && bindData[1] & 1) {\n      return func;\n    }\n\n    switch (argCount) {\n      case 1:\n        return function (value) {\n          return func.call(thisArg, value);\n        };\n\n      case 2:\n        return function (a, b) {\n          return func.call(thisArg, a, b);\n        };\n\n      case 3:\n        return function (value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n\n      case 4:\n        return function (accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n    }\n\n    return bind(func, thisArg);\n  }\n  /**\n   * The base implementation of `createWrapper` that creates the wrapper and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new function.\n   */\n\n\n  function baseCreateWrapper(bindData) {\n    var func = bindData[0],\n        bitmask = bindData[1],\n        partialArgs = bindData[2],\n        partialRightArgs = bindData[3],\n        thisArg = bindData[4],\n        arity = bindData[5];\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        key = func;\n\n    function bound() {\n      var thisBinding = isBind ? thisArg : this;\n\n      if (partialArgs) {\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n\n      if (partialRightArgs || isCurry) {\n        args || (args = slice(arguments));\n\n        if (partialRightArgs) {\n          push.apply(args, partialRightArgs);\n        }\n\n        if (isCurry && args.length < arity) {\n          bitmask |= 16 & ~32;\n          return baseCreateWrapper([func, isCurryBound ? bitmask : bitmask & ~3, args, null, thisArg, arity]);\n        }\n      }\n\n      args || (args = arguments);\n\n      if (isBindKey) {\n        func = thisBinding[key];\n      }\n\n      if (this instanceof bound) {\n        thisBinding = baseCreate(func.prototype);\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n\n      return func.apply(thisBinding, args);\n    }\n\n    setBindData(bound, bindData);\n    return bound;\n  }\n  /**\n   * The base implementation of `_.merge` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates values with source counterparts.\n   */\n\n\n  function baseMerge(object, source, callback, stackA, stackB) {\n    (isArray(source) ? forEach : forOwn)(source, function (source, key) {\n      var found,\n          isArr,\n          result = source,\n          value = object[key];\n\n      if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n        // avoid merging previously merged cyclic sources\n        var stackLength = stackA.length;\n\n        while (stackLength--) {\n          if (found = stackA[stackLength] == source) {\n            value = stackB[stackLength];\n            break;\n          }\n        }\n\n        if (!found) {\n          var isShallow;\n\n          if (callback) {\n            result = callback(value, source);\n\n            if (isShallow = typeof result != 'undefined') {\n              value = result;\n            }\n          }\n\n          if (!isShallow) {\n            value = isArr ? isArray(value) ? value : [] : isPlainObject(value) ? value : {};\n          } // add `source` and associated `value` to the stack of traversed objects\n\n\n          stackA.push(source);\n          stackB.push(value); // recursively merge objects and arrays (susceptible to call stack limits)\n\n          if (!isShallow) {\n            baseMerge(value, source, callback, stackA, stackB);\n          }\n        }\n      } else {\n        if (callback) {\n          result = callback(value, source);\n\n          if (typeof result == 'undefined') {\n            result = source;\n          }\n        }\n\n        if (typeof result != 'undefined') {\n          value = result;\n        }\n      }\n\n      object[key] = value;\n    });\n  }\n  /**\n   * Creates a function that, when called, either curries or invokes `func`\n   * with an optional `this` binding and partially applied arguments.\n   *\n   * @private\n   * @param {Function|string} func The function or method name to reference.\n   * @param {number} bitmask The bitmask of method flags to compose.\n   *  The bitmask may be composed of the following flags:\n   *  1 - `_.bind`\n   *  2 - `_.bindKey`\n   *  4 - `_.curry`\n   *  8 - `_.curry` (bound)\n   *  16 - `_.partial`\n   *  32 - `_.partialRight`\n   * @param {Array} [partialArgs] An array of arguments to prepend to those\n   *  provided to the new function.\n   * @param {Array} [partialRightArgs] An array of arguments to append to those\n   *  provided to the new function.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {number} [arity] The arity of `func`.\n   * @returns {Function} Returns the new function.\n   */\n\n\n  function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        isPartial = bitmask & 16,\n        isPartialRight = bitmask & 32;\n\n    if (!isBindKey && !isFunction(func)) {\n      throw new TypeError();\n    }\n\n    if (isPartial && !partialArgs.length) {\n      bitmask &= ~16;\n      isPartial = partialArgs = false;\n    }\n\n    if (isPartialRight && !partialRightArgs.length) {\n      bitmask &= ~32;\n      isPartialRight = partialRightArgs = false;\n    }\n\n    var bindData = func && func.__bindData__;\n\n    if (bindData && bindData !== true) {\n      // clone `bindData`\n      bindData = slice(bindData);\n\n      if (bindData[2]) {\n        bindData[2] = slice(bindData[2]);\n      }\n\n      if (bindData[3]) {\n        bindData[3] = slice(bindData[3]);\n      } // set `thisBinding` is not previously bound\n\n\n      if (isBind && !(bindData[1] & 1)) {\n        bindData[4] = thisArg;\n      } // set if previously bound but not currently (subsequent curried functions)\n\n\n      if (!isBind && bindData[1] & 1) {\n        bitmask |= 8;\n      } // set curried arity if not yet set\n\n\n      if (isCurry && !(bindData[1] & 4)) {\n        bindData[5] = arity;\n      } // append partial left arguments\n\n\n      if (isPartial) {\n        push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n      } // append partial right arguments\n\n\n      if (isPartialRight) {\n        unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n      } // merge flags\n\n\n      bindData[1] |= bitmask;\n      return createWrapper.apply(null, bindData);\n    } // fast path for `_.bind`\n\n\n    var creater = bitmask == 1 || bitmask === 17 ? baseBind : baseCreateWrapper;\n    return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n  }\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {...Object} [options] The compile options object(s).\n   * @param {string} [options.array] Code to determine if the iterable is an array or array-like.\n   * @param {boolean} [options.useHas] Specify using `hasOwnProperty` checks in the object loop.\n   * @param {Function} [options.keys] A reference to `_.keys` for use in own property iteration.\n   * @param {string} [options.args] A comma separated string of iteration function arguments.\n   * @param {string} [options.top] Code to execute before the iteration branches.\n   * @param {string} [options.loop] Code to execute in the object loop.\n   * @param {string} [options.bottom] Code to execute after the iteration branches.\n   * @returns {Function} Returns the compiled function.\n   */\n\n\n  function createIterator() {\n    // data properties\n    iteratorData.shadowedProps = shadowedProps; // iterator options\n\n    iteratorData.array = iteratorData.bottom = iteratorData.loop = iteratorData.top = '';\n    iteratorData.init = 'iterable';\n    iteratorData.useHas = true; // merge options into a template data object\n\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        iteratorData[key] = object[key];\n      }\n    }\n\n    var args = iteratorData.args;\n    iteratorData.firstArg = /^[^,]+/.exec(args)[0]; // create the function factory\n\n    var factory = Function('baseCreateCallback, errorClass, errorProto, hasOwnProperty, ' + 'indicatorObject, isArguments, isArray, isString, keys, objectProto, ' + 'objectTypes, nonEnumProps, stringClass, stringProto, toString', 'return function(' + args + ') {\\n' + iteratorTemplate(iteratorData) + '\\n}'); // return the compiled function\n\n    return factory(baseCreateCallback, errorClass, errorProto, hasOwnProperty, indicatorObject, isArguments, isArray, isString, iteratorData.keys, objectProto, objectTypes, nonEnumProps, stringClass, stringProto, toString);\n  }\n  /**\n   * Checks if `value` is a native function.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n   */\n\n\n  function isNative(value) {\n    return typeof value == 'function' && reNative.test(value);\n  }\n  /**\n   * Sets `this` binding data on a given function.\n   *\n   * @private\n   * @param {Function} func The function to set data on.\n   * @param {Array} value The data array to set.\n   */\n\n\n  var setBindData = !defineProperty ? noop : function (func, value) {\n    descriptor.value = value;\n    defineProperty(func, '__bindData__', descriptor);\n  };\n  /**\n   * A fallback implementation of `isPlainObject` which checks if a given value\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   */\n\n  function shimIsPlainObject(value) {\n    var ctor, result; // avoid non Object objects, `arguments` objects, and DOM elements\n\n    if (!(value && toString.call(value) == objectClass) || (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor)) || !support.argsClass && isArguments(value) || !support.nodeClass && isNode(value)) {\n      return false;\n    } // IE < 9 iterates inherited properties before own properties. If the first\n    // iterated property is an object's own property then there are no inherited\n    // enumerable properties.\n\n\n    if (support.ownLast) {\n      forIn(value, function (value, key, object) {\n        result = hasOwnProperty.call(object, key);\n        return false;\n      });\n      return result !== false;\n    } // In most environments an object's own properties are iterated before\n    // its inherited properties. If the last iterated property is an object's\n    // own property then there are no inherited enumerable properties.\n\n\n    forIn(value, function (value, key) {\n      result = key;\n    });\n    return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n\n\n  function isArguments(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == argsClass || false;\n  } // fallback for browsers that can't detect `arguments` objects by [[Class]]\n\n\n  if (!support.argsClass) {\n    isArguments = function isArguments(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee') || false;\n    };\n  }\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n\n\n  var isArray = nativeIsArray || function (value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == arrayClass || false;\n  };\n  /**\n   * A fallback implementation of `Object.keys` which produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @type Function\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   */\n\n\n  var shimKeys = createIterator({\n    'args': 'object',\n    'init': '[]',\n    'top': 'if (!(objectTypes[typeof object])) return result',\n    'loop': 'result.push(index)'\n  });\n  /**\n   * Creates an array composed of the own enumerable property names of an object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n   */\n\n  var keys = !nativeKeys ? shimKeys : function (object) {\n    if (!isObject(object)) {\n      return [];\n    }\n\n    if (support.enumPrototypes && typeof object == 'function' || support.nonEnumArgs && object.length && isArguments(object)) {\n      return shimKeys(object);\n    }\n\n    return nativeKeys(object);\n  };\n  /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */\n\n  var eachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': \"callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3)\",\n    'array': \"typeof length == 'number'\",\n    'keys': keys,\n    'loop': 'if (callback(iterable[index], index, collection) === false) return result'\n  };\n  /** Reusable iterator options for `assign` and `defaults` */\n\n  var defaultsIteratorOptions = {\n    'args': 'object, source, guard',\n    'top': 'var args = arguments,\\n' + '    argsIndex = 0,\\n' + \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" + 'while (++argsIndex < argsLength) {\\n' + '  iterable = args[argsIndex];\\n' + '  if (iterable && objectTypes[typeof iterable]) {',\n    'keys': keys,\n    'loop': \"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",\n    'bottom': '  }\\n}'\n  };\n  /** Reusable iterator options for `forIn` and `forOwn` */\n\n  var forOwnIteratorOptions = {\n    'top': 'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,\n    'array': false\n  };\n  /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the callback for each\n   * element in the collection. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   */\n\n  var baseEach = createIterator(eachIteratorOptions);\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite property assignments of previous\n   * sources. If a callback is provided it will be executed to produce the\n   * assigned values. The callback is bound to `thisArg` and invoked with two\n   * arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n   * // => { 'name': 'fred', 'employer': 'slate' }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var object = { 'name': 'barney' };\n   * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n\n  var assign = createIterator(defaultsIteratorOptions, {\n    'top': defaultsIteratorOptions.top.replace(';', ';\\n' + \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" + '  var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' + \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" + '  callback = args[--argsLength];\\n' + '}'),\n    'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'\n  });\n  /**\n   * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a callback\n   * is provided it will be executed to produce the cloned values. If the\n   * callback returns `undefined` cloning will be handled by the method instead.\n   * The callback is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the cloned value.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * var shallow = _.clone(characters);\n   * shallow[0] === characters[0];\n   * // => true\n   *\n   * var deep = _.clone(characters, true);\n   * deep[0] === characters[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n\n  function clone(value, isDeep, callback, thisArg) {\n    // allows working with \"Collections\" methods without using their `index`\n    // and `collection` arguments for `isDeep` and `callback`\n    if (typeof isDeep != 'boolean' && isDeep != null) {\n      thisArg = callback;\n      callback = isDeep;\n      isDeep = false;\n    }\n\n    return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n  }\n  /**\n   * Iterates over own and inherited enumerable properties of an object,\n   * executing the callback for each property. The callback is bound to `thisArg`\n   * and invoked with three arguments; (value, key, object). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * Shape.prototype.move = function(x, y) {\n   *   this.x += x;\n   *   this.y += y;\n   * };\n   *\n   * _.forIn(new Shape, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n   */\n\n\n  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n  /**\n   * Iterates over own enumerable properties of an object, executing the callback\n   * for each property. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   console.log(key);\n   * });\n   * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n   */\n\n  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|string} value The value to inspect.\n   * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n\n  function isEmpty(value) {\n    var result = true;\n\n    if (!value) {\n      return result;\n    }\n\n    var className = toString.call(value),\n        length = value.length;\n\n    if (className == arrayClass || className == stringClass || (support.argsClass ? className == argsClass : isArguments(value)) || className == objectClass && typeof length == 'number' && isFunction(value.splice)) {\n      return !length;\n    }\n\n    forOwn(value, function () {\n      return result = false;\n    });\n    return result;\n  }\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n\n\n  function isFunction(value) {\n    return typeof value == 'function';\n  } // fallback for older versions of Chrome and Safari\n\n\n  if (isFunction(/x/)) {\n    isFunction = function isFunction(value) {\n      return typeof value == 'function' && toString.call(value) == funcClass;\n    };\n  }\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n\n\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.io/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return !!(value && objectTypes[typeof value]);\n  }\n  /**\n   * Checks if `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * _.isPlainObject(new Shape);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   */\n\n\n  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function (value) {\n    if (!(value && toString.call(value) == objectClass) || !support.argsClass && isArguments(value)) {\n      return false;\n    }\n\n    var valueOf = value.valueOf,\n        objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n    return objProto ? value == objProto || getPrototypeOf(value) == objProto : shimIsPlainObject(value);\n  };\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('fred');\n   * // => true\n   */\n\n  function isString(value) {\n    return typeof value == 'string' || value && typeof value == 'object' && toString.call(value) == stringClass || false;\n  }\n  /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined` into the destination object. Subsequent sources\n   * will overwrite property assignments of previous sources. If a callback is\n   * provided it will be executed to produce the merged values of the destination\n   * and source properties. If the callback returns `undefined` merging will\n   * be handled by the method instead. The callback is bound to `thisArg` and\n   * invoked with two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var names = {\n   *   'characters': [\n   *     { 'name': 'barney' },\n   *     { 'name': 'fred' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'characters': [\n   *     { 'age': 36 },\n   *     { 'age': 40 }\n   *   ]\n   * };\n   *\n   * _.merge(names, ages);\n   * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(food, otherFood, function(a, b) {\n   *   return _.isArray(a) ? a.concat(b) : undefined;\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n   */\n\n\n  function merge(object) {\n    var args = arguments,\n        length = 2;\n\n    if (!isObject(object)) {\n      return object;\n    } // allows working with `_.reduce` and `_.reduceRight` without using\n    // their `index` and `collection` arguments\n\n\n    if (typeof args[2] != 'number') {\n      length = args.length;\n    }\n\n    if (length > 3 && typeof args[length - 2] == 'function') {\n      var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n    } else if (length > 2 && typeof args[length - 1] == 'function') {\n      callback = args[--length];\n    }\n\n    var sources = slice(arguments, 1, length),\n        index = -1,\n        stackA = getArray(),\n        stackB = getArray();\n\n    while (++index < length) {\n      baseMerge(object, sources[index], callback, stackA, stackB);\n    }\n\n    releaseArray(stackA);\n    releaseArray(stackB);\n    return object;\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Iterates over elements of a collection, executing the callback for each\n   * element. The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * Note: As with other \"Collections\" methods, objects with a `length` property\n   * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n   * may be used for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n   * // => logs each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n   * // => logs each number and returns the object (property order is not guaranteed across environments)\n   */\n\n\n  function forEach(collection, callback, thisArg) {\n    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      baseEach(collection, callback, thisArg);\n    }\n\n    return collection;\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n\n\n  function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      if (value) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * provided to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'fred' }, 'hi');\n   * func();\n   * // => 'hi fred'\n   */\n\n\n  function bind(func, thisArg) {\n    return arguments.length > 2 ? createWrapper(func, 17, slice(arguments, 2), null, thisArg) : createWrapper(func, 1, null, null, thisArg);\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.identity(object) === object;\n   * // => true\n   */\n\n\n  function identity(value) {\n    return value;\n  }\n  /**\n   * A no-operation function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.noop(object) === undefined;\n   * // => true\n   */\n\n\n  function noop() {// no operation performed\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  lodash.assign = assign;\n  lodash.bind = bind;\n  lodash.compact = compact;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.keys = keys;\n  lodash.merge = merge;\n  lodash.each = forEach;\n  lodash.extend = assign;\n  /*--------------------------------------------------------------------------*/\n  // add functions that return unwrapped values when chaining\n\n  lodash.clone = clone;\n  lodash.identity = identity;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isEmpty = isEmpty;\n  lodash.isFunction = isFunction;\n  lodash.isObject = isObject;\n  lodash.isPlainObject = isPlainObject;\n  lodash.isString = isString;\n  lodash.noop = noop;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type string\n   */\n\n  lodash.VERSION = '2.4.1';\n  /*--------------------------------------------------------------------------*/\n\n  if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n  }\n}).call(this);","map":{"version":3,"sources":["/home/rwasser/setjetters/setjettersGIS/clients/node_modules/osmtogeojson/lodash.custom.js"],"names":["arrayPool","indicatorObject","maxPoolSize","reFlags","reFuncName","reThis","shadowedProps","argsClass","arrayClass","boolClass","dateClass","errorClass","funcClass","numberClass","objectClass","regexpClass","stringClass","cloneableClasses","descriptor","iteratorData","objectTypes","root","window","freeExports","exports","nodeType","freeModule","module","moduleExports","freeGlobal","global","getArray","pop","isNode","value","toString","releaseArray","array","length","push","slice","start","end","index","result","Array","arrayRef","errorProto","Error","prototype","objectProto","Object","stringProto","String","reNative","RegExp","replace","fnToString","Function","getPrototypeOf","isNative","hasOwnProperty","propertyIsEnumerable","unshift","defineProperty","o","func","e","nativeCreate","create","nativeIsArray","isArray","nativeKeys","keys","ctorByClass","Boolean","Date","Number","nonEnumProps","key","className","call","lodash","support","ctor","x","object","props","arguments","argsObject","constructor","enumErrorProps","enumPrototypes","funcDecomp","WinRTError","test","funcNames","name","nonEnumArgs","nonEnumShadows","ownLast","spliceObjects","splice","unindexedChars","nodeClass","document","iteratorTemplate","obj","__p","firstArg","init","top","loop","conditions","useHas","join","k","bottom","baseBind","bindData","partialArgs","thisArg","bound","args","apply","thisBinding","baseCreate","isObject","setBindData","baseClone","isDeep","callback","stackA","stackB","isObj","source","exec","lastIndex","isArr","initedStack","assign","input","baseEach","forOwn","objValue","properties","baseCreateCallback","argCount","identity","__bindData__","a","b","collection","accumulator","bind","baseCreateWrapper","bitmask","partialRightArgs","arity","isBind","isBindKey","isCurry","isCurryBound","baseMerge","forEach","found","isPlainObject","stackLength","isShallow","createWrapper","isPartial","isPartialRight","isFunction","TypeError","creater","createIterator","factory","isArguments","isString","noop","shimIsPlainObject","forIn","shimKeys","eachIteratorOptions","defaultsIteratorOptions","forOwnIteratorOptions","clone","isEmpty","valueOf","objProto","merge","sources","compact","each","extend","VERSION","_"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAASkI,KAAT,CAAexJ,KAAf,EAAsBgG,MAAtB,EAA8BC,QAA9B,EAAwCV,OAAxC,EAAiD;AAC/C;AACA;AACA,QAAI,OAAOS,MAAP,IAAiB,SAAjB,IAA8BA,MAAM,IAAI,IAA5C,EAAkD;AAChDT,MAAAA,OAAO,GAAGU,QAAV;AACAA,MAAAA,QAAQ,GAAGD,MAAX;AACAA,MAAAA,MAAM,GAAG,KAAT;AACD;;AACD,WAAOD,SAAS,CAAC/F,KAAD,EAAQgG,MAAR,EAAgB,OAAOC,QAAP,IAAmB,UAAnB,IAAiCe,kBAAkB,CAACf,QAAD,EAAWV,OAAX,EAAoB,CAApB,CAAnE,CAAhB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,MAAI4D,KAAK,GAAGN,cAAc,CAACQ,mBAAD,EAAsBE,qBAAtB,EAA6C;AACrE,cAAU;AAD2D,GAA7C,CAA1B;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAI1C,MAAM,GAAGgC,cAAc,CAACQ,mBAAD,EAAsBE,qBAAtB,CAA3B;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAASE,OAAT,CAAiBzJ,KAAjB,EAAwB;AACtB,QAAIU,MAAM,GAAG,IAAb;;AACA,QAAI,CAACV,KAAL,EAAY;AACV,aAAOU,MAAP;AACD;;AACD,QAAIoC,SAAS,GAAG7C,QAAQ,CAAC8C,IAAT,CAAc/C,KAAd,CAAhB;AAAA,QACII,MAAM,GAAGJ,KAAK,CAACI,MADnB;;AAGA,QA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","sourcesContent":["/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash exports=\"node\" include=\"clone,merge,isEmpty,isArray,compact,each\" -d`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;(function() {\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [];\n\n  /** Used internally to indicate various things */\n  var indicatorObject = {};\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to fix the JScript [[DontEnum]] bug */\n  var shadowedProps = [\n    'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n    'toLocaleString', 'toString', 'valueOf'\n  ];\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      errorClass = '[object Error]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used as the data object for `iteratorTemplate` */\n  var iteratorData = {\n    'args': '',\n    'array': null,\n    'bottom': '',\n    'firstArg': '',\n    'init': '',\n    'keys': null,\n    'loop': '',\n    'shadowedProps': null,\n    'support': null,\n    'top': '',\n    'useHas': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */\n  function isNode(value) {\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Used for native method references */\n  var errorProto = Error.prototype,\n      objectProto = Object.prototype,\n      stringProto = String.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    String(toString)\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n  );\n\n  /** Native method shortcuts */\n  var fnToString = Function.prototype.toString,\n      getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n      hasOwnProperty = objectProto.hasOwnProperty,\n      push = arrayRef.push,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable,\n      unshift = arrayRef.unshift;\n\n  /** Used to set meta data on functions */\n  var defineProperty = (function() {\n    // IE 8 only accepts DOM elements\n    try {\n      var o = {},\n          func = isNative(func = Object.defineProperty) && func,\n          result = func(o, o, o) && func;\n    } catch(e) { }\n    return result;\n  }());\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n      nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n  /** Used to lookup a built-in constructor by [[Class]] */\n  var ctorByClass = {};\n  ctorByClass[arrayClass] = Array;\n  ctorByClass[boolClass] = Boolean;\n  ctorByClass[dateClass] = Date;\n  ctorByClass[funcClass] = Function;\n  ctorByClass[objectClass] = Object;\n  ctorByClass[numberClass] = Number;\n  ctorByClass[regexpClass] = RegExp;\n  ctorByClass[stringClass] = String;\n\n  /** Used to avoid iterating non-enumerable properties in IE < 9 */\n  var nonEnumProps = {};\n  nonEnumProps[arrayClass] = nonEnumProps[dateClass] = nonEnumProps[numberClass] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };\n  nonEnumProps[boolClass] = nonEnumProps[stringClass] = { 'constructor': true, 'toString': true, 'valueOf': true };\n  nonEnumProps[errorClass] = nonEnumProps[funcClass] = nonEnumProps[regexpClass] = { 'constructor': true, 'toString': true };\n  nonEnumProps[objectClass] = { 'constructor': true };\n\n  (function() {\n    var length = shadowedProps.length;\n    while (length--) {\n      var key = shadowedProps[length];\n      for (var className in nonEnumProps) {\n        if (hasOwnProperty.call(nonEnumProps, className) && !hasOwnProperty.call(nonEnumProps[className], key)) {\n          nonEnumProps[className][key] = false;\n        }\n      }\n    }\n  }());\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps the given value to enable intuitive\n   * method chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * Chaining is supported in custom builds as long as the `value` method is\n   * implicitly or explicitly included in the build.\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n   * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n   * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n   * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n   * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n   * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n   * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n   * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n   * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n   * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n   * and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n   * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n   * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n   * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n   * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n   * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n   * `template`, `unescape`, `uniqueId`, and `value`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * provided, otherwise they return unwrapped values.\n   *\n   * Explicit chaining can be enabled by using the `_.chain` method.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   * @example\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // returns an unwrapped value\n   * wrapped.reduce(function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * // returns a wrapped value\n   * var squares = wrapped.map(function(num) {\n   *   return num * num;\n   * });\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash() {\n    // no operation performed\n  }\n\n  /**\n   * An object used to flag environments features.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  var support = lodash.support = {};\n\n  (function() {\n    var ctor = function() { this.x = 1; },\n        object = { '0': 1, 'length': 1 },\n        props = [];\n\n    ctor.prototype = { 'valueOf': 1, 'y': 1 };\n    for (var key in new ctor) { props.push(key); }\n    for (key in arguments) { }\n\n    /**\n     * Detect if an `arguments` object's [[Class]] is resolvable (all but Firefox < 4, IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.argsClass = toString.call(arguments) == argsClass;\n\n    /**\n     * Detect if `arguments` objects are `Object` objects (all but Narwhal and Opera < 10.5).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.argsObject = arguments.constructor == Object && !(arguments instanceof Array);\n\n    /**\n     * Detect if `name` or `message` properties of `Error.prototype` are\n     * enumerable by default. (IE < 9, Safari < 5.1)\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') || propertyIsEnumerable.call(errorProto, 'name');\n\n    /**\n     * Detect if `prototype` properties are enumerable by default.\n     *\n     * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n     * (if the prototype or a property on the prototype has been set)\n     * incorrectly sets a function's `prototype` property [[Enumerable]]\n     * value to `true`.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.enumPrototypes = propertyIsEnumerable.call(ctor, 'prototype');\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(root.WinRTError) && reThis.test(function() { return this; });\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * Detect if `arguments` object indexes are non-enumerable\n     * (Firefox < 4, IE < 9, PhantomJS, Safari < 5.1).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.nonEnumArgs = key != 0;\n\n    /**\n     * Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n     *\n     * In IE < 9 an objects own properties, shadowing non-enumerable ones, are\n     * made non-enumerable as well (a.k.a the JScript [[DontEnum]] bug).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.nonEnumShadows = !/valueOf/.test(props);\n\n    /**\n     * Detect if own properties are iterated after inherited properties (all but IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.ownLast = props[0] != 'x';\n\n    /**\n     * Detect if `Array#shift` and `Array#splice` augment array-like objects correctly.\n     *\n     * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n     * and `splice()` functions that fail to remove the last element, `value[0]`,\n     * of array-like objects even though the `length` property is set to `0`.\n     * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n     * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.spliceObjects = (arrayRef.splice.call(object, 0, 1), !object[0]);\n\n    /**\n     * Detect lack of support for accessing string characters by index.\n     *\n     * IE < 8 can't access characters by index and IE 8 can only access\n     * characters by index on string literals.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';\n\n    /**\n     * Detect if a DOM node's [[Class]] is resolvable (all but IE < 9)\n     * and that the JS engine errors when attempting to coerce an object to\n     * a string without a `toString` function.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    try {\n      support.nodeClass = !(toString.call(document) == objectClass && !({ 'toString': 0 } + ''));\n    } catch(e) {\n      support.nodeClass = true;\n    }\n  }(1));\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Object} data The data object used to populate the text.\n   * @returns {string} Returns the interpolated text.\n   */\n  var iteratorTemplate = function(obj) {\n\n    var __p = 'var index, iterable = ' +\n    (obj.firstArg) +\n    ', result = ' +\n    (obj.init) +\n    ';\\nif (!iterable) return result;\\n' +\n    (obj.top) +\n    ';';\n     if (obj.array) {\n    __p += '\\nvar length = iterable.length; index = -1;\\nif (' +\n    (obj.array) +\n    ') {  ';\n     if (support.unindexedChars) {\n    __p += '\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  ';\n     }\n    __p += '\\n  while (++index < length) {\\n    ' +\n    (obj.loop) +\n    ';\\n  }\\n}\\nelse {  ';\n     } else if (support.nonEnumArgs) {\n    __p += '\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      ' +\n    (obj.loop) +\n    ';\\n    }\\n  } else {  ';\n     }\n\n     if (support.enumPrototypes) {\n    __p += '\\n  var skipProto = typeof iterable == \\'function\\';\\n  ';\n     }\n\n     if (support.enumErrorProps) {\n    __p += '\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  ';\n     }\n\n        var conditions = [];    if (support.enumPrototypes) { conditions.push('!(skipProto && index == \"prototype\")'); }    if (support.enumErrorProps)  { conditions.push('!(skipErrorProps && (index == \"message\" || index == \"name\"))'); }\n\n     if (obj.useHas && obj.keys) {\n    __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n';\n        if (conditions.length) {\n    __p += '    if (' +\n    (conditions.join(' && ')) +\n    ') {\\n  ';\n     }\n    __p +=\n    (obj.loop) +\n    ';    ';\n     if (conditions.length) {\n    __p += '\\n    }';\n     }\n    __p += '\\n  }  ';\n     } else {\n    __p += '\\n  for (index in iterable) {\\n';\n        if (obj.useHas) { conditions.push(\"hasOwnProperty.call(iterable, index)\"); }    if (conditions.length) {\n    __p += '    if (' +\n    (conditions.join(' && ')) +\n    ') {\\n  ';\n     }\n    __p +=\n    (obj.loop) +\n    ';    ';\n     if (conditions.length) {\n    __p += '\\n    }';\n     }\n    __p += '\\n  }    ';\n     if (support.nonEnumShadows) {\n    __p += '\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      ';\n     for (k = 0; k < 7; k++) {\n    __p += '\\n    index = \\'' +\n    (obj.shadowedProps[k]) +\n    '\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';\n            if (!obj.useHas) {\n    __p += ' || (!nonEnum[index] && iterable[index] !== objectProto[index])';\n     }\n    __p += ') {\\n      ' +\n    (obj.loop) +\n    ';\\n    }      ';\n     }\n    __p += '\\n  }    ';\n     }\n\n     }\n\n     if (obj.array || support.nonEnumArgs) {\n    __p += '\\n}';\n     }\n    __p +=\n    (obj.bottom) +\n    ';\\nreturn result';\n\n    return __p\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.bind` that creates the bound function and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new bound function.\n   */\n  function baseBind(bindData) {\n    var func = bindData[0],\n        partialArgs = bindData[2],\n        thisArg = bindData[4];\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.io/#x15.3.4.5\n      if (partialArgs) {\n        // avoid `arguments` object deoptimizations by using `slice` instead\n        // of `Array.prototype.slice.call` and not assigning `arguments` to a\n        // variable as a ternary expression\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      // mimic the constructor's `return` behavior\n      // http://es5.github.io/#x13.2.2\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `func`\n        var thisBinding = baseCreate(func.prototype),\n            result = func.apply(thisBinding, args || arguments);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisArg, args || arguments);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  /**\n   * The base implementation of `_.clone` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates clones with source counterparts.\n   * @returns {*} Returns the cloned value.\n   */\n  function baseClone(value, isDeep, callback, stackA, stackB) {\n    if (callback) {\n      var result = callback(value);\n      if (typeof result != 'undefined') {\n        return result;\n      }\n    }\n    // inspect [[Class]]\n    var isObj = isObject(value);\n    if (isObj) {\n      var className = toString.call(value);\n      if (!cloneableClasses[className] || (!support.nodeClass && isNode(value))) {\n        return value;\n      }\n      var ctor = ctorByClass[className];\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          return new ctor(+value);\n\n        case numberClass:\n        case stringClass:\n          return new ctor(value);\n\n        case regexpClass:\n          result = ctor(value.source, reFlags.exec(value));\n          result.lastIndex = value.lastIndex;\n          return result;\n      }\n    } else {\n      return value;\n    }\n    var isArr = isArray(value);\n    if (isDeep) {\n      // check for circular references and return corresponding clone\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      result = isArr ? ctor(value.length) : {};\n    }\n    else {\n      result = isArr ? slice(value) : assign({}, value);\n    }\n    // add array properties assigned by `RegExp#exec`\n    if (isArr) {\n      if (hasOwnProperty.call(value, 'index')) {\n        result.index = value.index;\n      }\n      if (hasOwnProperty.call(value, 'input')) {\n        result.input = value.input;\n      }\n    }\n    // exit for shallow clone\n    if (!isDeep) {\n      return result;\n    }\n    // add the source value to the stack of traversed objects\n    // and associate it with its clone\n    stackA.push(value);\n    stackB.push(result);\n\n    // recursively populate clone (susceptible to call stack limits)\n    (isArr ? baseEach : forOwn)(value, function(objValue, key) {\n      result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n    });\n\n    if (initedStack) {\n      releaseArray(stackA);\n      releaseArray(stackB);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(prototype, properties) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n  }\n  // fallback for browsers without `Object.create`\n  if (!nativeCreate) {\n    baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || root.Object();\n      };\n    }());\n  }\n\n  /**\n   * The base implementation of `_.createCallback` without support for creating\n   * \"_.pluck\" or \"_.where\" style callbacks.\n   *\n   * @private\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    }\n    // exit early for no `thisArg` or already bound by `Function#bind`\n    if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n      return func;\n    }\n    var bindData = func.__bindData__;\n    if (typeof bindData == 'undefined') {\n      if (support.funcNames) {\n        bindData = !func.name;\n      }\n      bindData = bindData || !support.funcDecomp;\n      if (!bindData) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          bindData = !reFuncName.test(source);\n        }\n        if (!bindData) {\n          // checks if `func` references the `this` keyword and stores the result\n          bindData = reThis.test(source);\n          setBindData(func, bindData);\n        }\n      }\n    }\n    // exit early if there are no `this` references or `func` is bound\n    if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n      return func;\n    }\n    switch (argCount) {\n      case 1: return function(value) {\n        return func.call(thisArg, value);\n      };\n      case 2: return function(a, b) {\n        return func.call(thisArg, a, b);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(thisArg, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(thisArg, accumulator, value, index, collection);\n      };\n    }\n    return bind(func, thisArg);\n  }\n\n  /**\n   * The base implementation of `createWrapper` that creates the wrapper and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new function.\n   */\n  function baseCreateWrapper(bindData) {\n    var func = bindData[0],\n        bitmask = bindData[1],\n        partialArgs = bindData[2],\n        partialRightArgs = bindData[3],\n        thisArg = bindData[4],\n        arity = bindData[5];\n\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        key = func;\n\n    function bound() {\n      var thisBinding = isBind ? thisArg : this;\n      if (partialArgs) {\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      if (partialRightArgs || isCurry) {\n        args || (args = slice(arguments));\n        if (partialRightArgs) {\n          push.apply(args, partialRightArgs);\n        }\n        if (isCurry && args.length < arity) {\n          bitmask |= 16 & ~32;\n          return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n        }\n      }\n      args || (args = arguments);\n      if (isBindKey) {\n        func = thisBinding[key];\n      }\n      if (this instanceof bound) {\n        thisBinding = baseCreate(func.prototype);\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  /**\n   * The base implementation of `_.merge` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates values with source counterparts.\n   */\n  function baseMerge(object, source, callback, stackA, stackB) {\n    (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n      var found,\n          isArr,\n          result = source,\n          value = object[key];\n\n      if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n        // avoid merging previously merged cyclic sources\n        var stackLength = stackA.length;\n        while (stackLength--) {\n          if ((found = stackA[stackLength] == source)) {\n            value = stackB[stackLength];\n            break;\n          }\n        }\n        if (!found) {\n          var isShallow;\n          if (callback) {\n            result = callback(value, source);\n            if ((isShallow = typeof result != 'undefined')) {\n              value = result;\n            }\n          }\n          if (!isShallow) {\n            value = isArr\n              ? (isArray(value) ? value : [])\n              : (isPlainObject(value) ? value : {});\n          }\n          // add `source` and associated `value` to the stack of traversed objects\n          stackA.push(source);\n          stackB.push(value);\n\n          // recursively merge objects and arrays (susceptible to call stack limits)\n          if (!isShallow) {\n            baseMerge(value, source, callback, stackA, stackB);\n          }\n        }\n      }\n      else {\n        if (callback) {\n          result = callback(value, source);\n          if (typeof result == 'undefined') {\n            result = source;\n          }\n        }\n        if (typeof result != 'undefined') {\n          value = result;\n        }\n      }\n      object[key] = value;\n    });\n  }\n\n  /**\n   * Creates a function that, when called, either curries or invokes `func`\n   * with an optional `this` binding and partially applied arguments.\n   *\n   * @private\n   * @param {Function|string} func The function or method name to reference.\n   * @param {number} bitmask The bitmask of method flags to compose.\n   *  The bitmask may be composed of the following flags:\n   *  1 - `_.bind`\n   *  2 - `_.bindKey`\n   *  4 - `_.curry`\n   *  8 - `_.curry` (bound)\n   *  16 - `_.partial`\n   *  32 - `_.partialRight`\n   * @param {Array} [partialArgs] An array of arguments to prepend to those\n   *  provided to the new function.\n   * @param {Array} [partialRightArgs] An array of arguments to append to those\n   *  provided to the new function.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {number} [arity] The arity of `func`.\n   * @returns {Function} Returns the new function.\n   */\n  function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        isPartial = bitmask & 16,\n        isPartialRight = bitmask & 32;\n\n    if (!isBindKey && !isFunction(func)) {\n      throw new TypeError;\n    }\n    if (isPartial && !partialArgs.length) {\n      bitmask &= ~16;\n      isPartial = partialArgs = false;\n    }\n    if (isPartialRight && !partialRightArgs.length) {\n      bitmask &= ~32;\n      isPartialRight = partialRightArgs = false;\n    }\n    var bindData = func && func.__bindData__;\n    if (bindData && bindData !== true) {\n      // clone `bindData`\n      bindData = slice(bindData);\n      if (bindData[2]) {\n        bindData[2] = slice(bindData[2]);\n      }\n      if (bindData[3]) {\n        bindData[3] = slice(bindData[3]);\n      }\n      // set `thisBinding` is not previously bound\n      if (isBind && !(bindData[1] & 1)) {\n        bindData[4] = thisArg;\n      }\n      // set if previously bound but not currently (subsequent curried functions)\n      if (!isBind && bindData[1] & 1) {\n        bitmask |= 8;\n      }\n      // set curried arity if not yet set\n      if (isCurry && !(bindData[1] & 4)) {\n        bindData[5] = arity;\n      }\n      // append partial left arguments\n      if (isPartial) {\n        push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n      }\n      // append partial right arguments\n      if (isPartialRight) {\n        unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n      }\n      // merge flags\n      bindData[1] |= bitmask;\n      return createWrapper.apply(null, bindData);\n    }\n    // fast path for `_.bind`\n    var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n    return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n  }\n\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {...Object} [options] The compile options object(s).\n   * @param {string} [options.array] Code to determine if the iterable is an array or array-like.\n   * @param {boolean} [options.useHas] Specify using `hasOwnProperty` checks in the object loop.\n   * @param {Function} [options.keys] A reference to `_.keys` for use in own property iteration.\n   * @param {string} [options.args] A comma separated string of iteration function arguments.\n   * @param {string} [options.top] Code to execute before the iteration branches.\n   * @param {string} [options.loop] Code to execute in the object loop.\n   * @param {string} [options.bottom] Code to execute after the iteration branches.\n   * @returns {Function} Returns the compiled function.\n   */\n  function createIterator() {\n    // data properties\n    iteratorData.shadowedProps = shadowedProps;\n\n    // iterator options\n    iteratorData.array = iteratorData.bottom = iteratorData.loop = iteratorData.top = '';\n    iteratorData.init = 'iterable';\n    iteratorData.useHas = true;\n\n    // merge options into a template data object\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        iteratorData[key] = object[key];\n      }\n    }\n    var args = iteratorData.args;\n    iteratorData.firstArg = /^[^,]+/.exec(args)[0];\n\n    // create the function factory\n    var factory = Function(\n        'baseCreateCallback, errorClass, errorProto, hasOwnProperty, ' +\n        'indicatorObject, isArguments, isArray, isString, keys, objectProto, ' +\n        'objectTypes, nonEnumProps, stringClass, stringProto, toString',\n      'return function(' + args + ') {\\n' + iteratorTemplate(iteratorData) + '\\n}'\n    );\n\n    // return the compiled function\n    return factory(\n      baseCreateCallback, errorClass, errorProto, hasOwnProperty,\n      indicatorObject, isArguments, isArray, isString, iteratorData.keys, objectProto,\n      objectTypes, nonEnumProps, stringClass, stringProto, toString\n    );\n  }\n\n  /**\n   * Checks if `value` is a native function.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n   */\n  function isNative(value) {\n    return typeof value == 'function' && reNative.test(value);\n  }\n\n  /**\n   * Sets `this` binding data on a given function.\n   *\n   * @private\n   * @param {Function} func The function to set data on.\n   * @param {Array} value The data array to set.\n   */\n  var setBindData = !defineProperty ? noop : function(func, value) {\n    descriptor.value = value;\n    defineProperty(func, '__bindData__', descriptor);\n  };\n\n  /**\n   * A fallback implementation of `isPlainObject` which checks if a given value\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   */\n  function shimIsPlainObject(value) {\n    var ctor,\n        result;\n\n    // avoid non Object objects, `arguments` objects, and DOM elements\n    if (!(value && toString.call(value) == objectClass) ||\n        (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor)) ||\n        (!support.argsClass && isArguments(value)) ||\n        (!support.nodeClass && isNode(value))) {\n      return false;\n    }\n    // IE < 9 iterates inherited properties before own properties. If the first\n    // iterated property is an object's own property then there are no inherited\n    // enumerable properties.\n    if (support.ownLast) {\n      forIn(value, function(value, key, object) {\n        result = hasOwnProperty.call(object, key);\n        return false;\n      });\n      return result !== false;\n    }\n    // In most environments an object's own properties are iterated before\n    // its inherited properties. If the last iterated property is an object's\n    // own property then there are no inherited enumerable properties.\n    forIn(value, function(value, key) {\n      result = key;\n    });\n    return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == argsClass || false;\n  }\n  // fallback for browsers that can't detect `arguments` objects by [[Class]]\n  if (!support.argsClass) {\n    isArguments = function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee') || false;\n    };\n  }\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == arrayClass || false;\n  };\n\n  /**\n   * A fallback implementation of `Object.keys` which produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @type Function\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   */\n  var shimKeys = createIterator({\n    'args': 'object',\n    'init': '[]',\n    'top': 'if (!(objectTypes[typeof object])) return result',\n    'loop': 'result.push(index)'\n  });\n\n  /**\n   * Creates an array composed of the own enumerable property names of an object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    if ((support.enumPrototypes && typeof object == 'function') ||\n        (support.nonEnumArgs && object.length && isArguments(object))) {\n      return shimKeys(object);\n    }\n    return nativeKeys(object);\n  };\n\n  /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */\n  var eachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': \"callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3)\",\n    'array': \"typeof length == 'number'\",\n    'keys': keys,\n    'loop': 'if (callback(iterable[index], index, collection) === false) return result'\n  };\n\n  /** Reusable iterator options for `assign` and `defaults` */\n  var defaultsIteratorOptions = {\n    'args': 'object, source, guard',\n    'top':\n      'var args = arguments,\\n' +\n      '    argsIndex = 0,\\n' +\n      \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" +\n      'while (++argsIndex < argsLength) {\\n' +\n      '  iterable = args[argsIndex];\\n' +\n      '  if (iterable && objectTypes[typeof iterable]) {',\n    'keys': keys,\n    'loop': \"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",\n    'bottom': '  }\\n}'\n  };\n\n  /** Reusable iterator options for `forIn` and `forOwn` */\n  var forOwnIteratorOptions = {\n    'top': 'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,\n    'array': false\n  };\n\n  /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the callback for each\n   * element in the collection. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   */\n  var baseEach = createIterator(eachIteratorOptions);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite property assignments of previous\n   * sources. If a callback is provided it will be executed to produce the\n   * assigned values. The callback is bound to `thisArg` and invoked with two\n   * arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n   * // => { 'name': 'fred', 'employer': 'slate' }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var object = { 'name': 'barney' };\n   * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n  var assign = createIterator(defaultsIteratorOptions, {\n    'top':\n      defaultsIteratorOptions.top.replace(';',\n        ';\\n' +\n        \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" +\n        '  var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' +\n        \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" +\n        '  callback = args[--argsLength];\\n' +\n        '}'\n      ),\n    'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'\n  });\n\n  /**\n   * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a callback\n   * is provided it will be executed to produce the cloned values. If the\n   * callback returns `undefined` cloning will be handled by the method instead.\n   * The callback is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the cloned value.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * var shallow = _.clone(characters);\n   * shallow[0] === characters[0];\n   * // => true\n   *\n   * var deep = _.clone(characters, true);\n   * deep[0] === characters[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n  function clone(value, isDeep, callback, thisArg) {\n    // allows working with \"Collections\" methods without using their `index`\n    // and `collection` arguments for `isDeep` and `callback`\n    if (typeof isDeep != 'boolean' && isDeep != null) {\n      thisArg = callback;\n      callback = isDeep;\n      isDeep = false;\n    }\n    return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n  }\n\n  /**\n   * Iterates over own and inherited enumerable properties of an object,\n   * executing the callback for each property. The callback is bound to `thisArg`\n   * and invoked with three arguments; (value, key, object). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * Shape.prototype.move = function(x, y) {\n   *   this.x += x;\n   *   this.y += y;\n   * };\n   *\n   * _.forIn(new Shape, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n   */\n  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n\n  /**\n   * Iterates over own enumerable properties of an object, executing the callback\n   * for each property. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   console.log(key);\n   * });\n   * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n   */\n  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|string} value The value to inspect.\n   * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    var result = true;\n    if (!value) {\n      return result;\n    }\n    var className = toString.call(value),\n        length = value.length;\n\n    if ((className == arrayClass || className == stringClass ||\n        (support.argsClass ? className == argsClass : isArguments(value))) ||\n        (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n      return !length;\n    }\n    forOwn(value, function() {\n      return (result = false);\n    });\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function(value) {\n      return typeof value == 'function' && toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.io/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return !!(value && objectTypes[typeof value]);\n  }\n\n  /**\n   * Checks if `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * _.isPlainObject(new Shape);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   */\n  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n    if (!(value && toString.call(value) == objectClass) || (!support.argsClass && isArguments(value))) {\n      return false;\n    }\n    var valueOf = value.valueOf,\n        objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n    return objProto\n      ? (value == objProto || getPrototypeOf(value) == objProto)\n      : shimIsPlainObject(value);\n  };\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('fred');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      value && typeof value == 'object' && toString.call(value) == stringClass || false;\n  }\n\n  /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined` into the destination object. Subsequent sources\n   * will overwrite property assignments of previous sources. If a callback is\n   * provided it will be executed to produce the merged values of the destination\n   * and source properties. If the callback returns `undefined` merging will\n   * be handled by the method instead. The callback is bound to `thisArg` and\n   * invoked with two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var names = {\n   *   'characters': [\n   *     { 'name': 'barney' },\n   *     { 'name': 'fred' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'characters': [\n   *     { 'age': 36 },\n   *     { 'age': 40 }\n   *   ]\n   * };\n   *\n   * _.merge(names, ages);\n   * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(food, otherFood, function(a, b) {\n   *   return _.isArray(a) ? a.concat(b) : undefined;\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n   */\n  function merge(object) {\n    var args = arguments,\n        length = 2;\n\n    if (!isObject(object)) {\n      return object;\n    }\n    // allows working with `_.reduce` and `_.reduceRight` without using\n    // their `index` and `collection` arguments\n    if (typeof args[2] != 'number') {\n      length = args.length;\n    }\n    if (length > 3 && typeof args[length - 2] == 'function') {\n      var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n    } else if (length > 2 && typeof args[length - 1] == 'function') {\n      callback = args[--length];\n    }\n    var sources = slice(arguments, 1, length),\n        index = -1,\n        stackA = getArray(),\n        stackB = getArray();\n\n    while (++index < length) {\n      baseMerge(object, sources[index], callback, stackA, stackB);\n    }\n    releaseArray(stackA);\n    releaseArray(stackB);\n    return object;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Iterates over elements of a collection, executing the callback for each\n   * element. The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * Note: As with other \"Collections\" methods, objects with a `length` property\n   * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n   * may be used for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n   * // => logs each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n   * // => logs each number and returns the object (property order is not guaranteed across environments)\n   */\n  function forEach(collection, callback, thisArg) {\n    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      baseEach(collection, callback, thisArg);\n    }\n    return collection;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * provided to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'fred' }, 'hi');\n   * func();\n   * // => 'hi fred'\n   */\n  function bind(func, thisArg) {\n    return arguments.length > 2\n      ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n      : createWrapper(func, 1, null, null, thisArg);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.identity(object) === object;\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.noop(object) === undefined;\n   * // => true\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  lodash.assign = assign;\n  lodash.bind = bind;\n  lodash.compact = compact;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.keys = keys;\n  lodash.merge = merge;\n\n  lodash.each = forEach;\n  lodash.extend = assign;\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return unwrapped values when chaining\n  lodash.clone = clone;\n  lodash.identity = identity;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isEmpty = isEmpty;\n  lodash.isFunction = isFunction;\n  lodash.isObject = isObject;\n  lodash.isPlainObject = isPlainObject;\n  lodash.isString = isString;\n  lodash.noop = noop;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type string\n   */\n  lodash.VERSION = '2.4.1';\n\n  /*--------------------------------------------------------------------------*/\n\n  if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n\n  }\n\n}.call(this));\n"]},"metadata":{},"sourceType":"script"}